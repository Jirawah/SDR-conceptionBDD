ðŸŽ¯ Objectif : Diagramme de classes du microservice `rdv-service`

Ce service gÃ¨re :
    - La crÃ©ation, modification, suppression de RDV (UC7, UC8, UC9, UC10)
    - Le dÃ©tail des RDV + planning par jour (UC13, UC27, UC28)
    - La demande de participation Ã  un RDV (UC24)

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ§± Ã‰tape 1 : EntitÃ©s persistÃ©es (domaines JPA)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

âœ… 1. Rdv  
ReprÃ©sente un rendez-vous de jeu planifiÃ© par un utilisateur.

    Attributs :
        - id : Long
        - nom : String
        - date : LocalDate
        - heure : LocalTime
        - jeu : String
        - statut : String (ex : OUVERT, FERME, ANNULE)
        - slots : int (nombre de places disponibles)
        - organisateurId : Long

âœ… 2. Participant  
ReprÃ©sente un utilisateur inscrit Ã  un RDV avec un rÃ´le spÃ©cifique (joueur, remplaÃ§ant...).

    Attributs :
        - id : Long
        - userId : Long
        - rdv : Rdv (relation ManyToOne)
        - role : String (ex : JOUEUR, REMPLAÃ‡ANT)
        - statutParticipation : String (ex : CONFIRME, EN_ATTENTE, REFUSE)

    Relation :
        - Un Rdv peut avoir plusieurs Participants
        - Un Participant appartient Ã  un seul Rdv

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ“¦ Ã‰tape 2 : DTOs (objets dâ€™Ã©change)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

UtilisÃ©s cÃ´tÃ© Angular / REST pour Ã©changer avec lâ€™API.

âœ… CreateRdvRequest  
    - nom : String  
    - date : LocalDate  
    - heure : LocalTime  
    - jeu : String  
    - slots : int  

âœ… RdvDTO  
    - id : Long  
    - nom : String  
    - date : LocalDate  
    - heure : LocalTime  
    - jeu : String  
    - statut : String  
    - slots : int  
    - organisateurId : Long  
    - participants : List<ParticipantDTO>  

âœ… ParticipantDTO  
    - userId : Long  
    - role : String  
    - statutParticipation : String  

âœ… RdvSummaryDTO  
    - id : Long  
    - nom : String  
    - date : LocalDate  
    - jeu : String  
    - statut : String  

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ”— Ã‰tape 3 : Relations
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

- Rdv 1 -- * Participant (un RDV peut avoir plusieurs participants)
- Les DTOs sont utilisÃ©s pour lâ€™Ã©change API, avec composition (ex : RdvDTO contient une liste de ParticipantDTO)

ðŸŽ¯ Objectif : Diagramme de classes du microservice `friend-service`

Ce service gÃ¨re :
    - Lâ€™ajout et la suppression dâ€™amis (UC15, UC20, UC26)
    - La crÃ©ation, modification et suppression de listes dâ€™amis (UC16, UC17, UC19)

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ§± Ã‰tape 1 : EntitÃ©s persistÃ©es (domaines JPA)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

âœ… 1. Friend  
ReprÃ©sente une relation dâ€™amitiÃ© entre deux utilisateurs.

    Attributs :
        - id : Long
        - userId : Long
        - amiId : Long
        - statut : String (ex : PENDING, ACCEPTED, BLOCKED)
        - dateAjout : LocalDateTime

âœ… 2. FriendList  
ReprÃ©sente une liste dâ€™amis nommÃ©e crÃ©Ã©e par un utilisateur.

    Attributs :
        - id : Long
        - nom : String
        - userId : Long (propriÃ©taire de la liste)

âœ… 3. FriendListMember  
Fait le lien entre une liste dâ€™amis et un utilisateur ami.

    Attributs :
        - id : Long
        - friendList : FriendList (ManyToOne)
        - amiId : Long

    Relations :
        - Une FriendList peut contenir plusieurs FriendListMember
        - Un FriendListMember appartient Ã  une seule FriendList

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ“¦ Ã‰tape 2 : DTOs (objets dâ€™Ã©change)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

âœ… FriendDTO  
    - userId : Long  
    - amiId : Long  
    - statut : String  
    - dateAjout : LocalDateTime  

âœ… FriendListDTO  
    - id : Long  
    - nom : String  
    - userId : Long  
    - membres : List<Long>

âœ… CreateFriendListRequest  
    - nom : String  
    - membres : List<Long>

âœ… UpdateFriendListRequest  
    - id : Long  
    - nom : String  
    - membres : List<Long>

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
ðŸ”— Ã‰tape 3 : Relations
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

- FriendList 1 -- * FriendListMember  
- FriendListMember --> amiId (utilisateur externe, non liÃ© dans ce microservice)
